buildscript {

    ext {
        nexus = {
            credentials {
                username nexusBuildUserToken
                password nexusBuildPassToken
            }
            url nexusRepoURL
        }
    }

    repositories {
        maven(nexus)
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${dependencyVersionSpringBootGradlePlugin}"
        classpath "net.researchgate:gradle-release:${dependencyVersionGradleReleasePlugin}"
        classpath "mysql:mysql-connector-java:${dependencyVersionMySQLConnector}"
        classpath "com.h2database:h2:${dependencyVersionH2}"
    }
}

// Liquibase plugin
plugins {
    id 'org.liquibase.gradle' version '1.2.0'
}

repositories {
    maven(nexus)
}

// IDE plugins
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

// Java dev plugins
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'jdepend'
apply plugin: 'spring-boot'
apply plugin: 'maven'

// code quality plugins
apply plugin: 'checkstyle'

// release plugins
apply plugin: 'net.researchgate.release'

// project artifact info
group = groupId
archivesBaseName = artifactId

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/changelog.groovy'
            url 'jdbc:mysql://localhost:3306/paf'
            username 'paf'
            password 'password'
        }
//        second {
//            changeLogFile 'second.groovy'
//            url 'jdbc:h2:db/springbootdb;FILE_LOCK=NO'
//            username 'sa'
//            password ''
//            changeLogParameters([ myToken: 'myvalue',
//                                  second: 'secondValue'])
//        }
    }

//    runList = project.ext.runList
//    runList = 'main, second'
    runList = 'main'
}

// configure plugins
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: nexusReleaseURL) {
                authentication(userName: nexusBuildUserToken, password: nexusBuildPassToken);
            }
            snapshotRepository(url: nexusSnapshotURL) {
                authentication(userName: nexusBuildUserToken, password: nexusBuildPassToken);
            }
        }
    }
}

jacoco {
    toolVersion = "${dependencyVersionJacocoTool}"
    reportsDir = file("${buildDir}/jacocoReportDir")
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

release {
    git {
        requireBranch = /master|integration.*/
        pushToCurrentBranch = true
    }
}


checkstyle {
    toolVersion = "6.0"
}

// only tag a release if the upload of the artefacts to Nexus was successful
createReleaseTag.dependsOn uploadArchives

// configure project specific properties/dependencies

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Add a provided configuration.
// This is used to add jar dependencies that are needed for compile time only
// but should not be bundled in the war/ear projects.
configurations { provided }
sourceSets.main.compileClasspath += configurations.provided
sourceSets.test.compileClasspath += configurations.provided
sourceSets.test.runtimeClasspath += configurations.provided
// optional: if using 'eclipse' plugin
eclipse.classpath.plusConfigurations += configurations.provided

dependencies {
    compile "org.springframework.boot:spring-boot-starter:${dependencyVersionSpringBoot}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${dependencyVersionSpringBoot}"
    compile "org.springframework.boot:spring-boot-starter-web:${dependencyVersionSpringBoot}"
    compile "org.springframework.boot:spring-boot-starter-security:${dependencyVersionSpringBoot}"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${dependencyVersionSpringBoot}"

    compile "com.h2database:h2:${dependencyVersionH2}"

    compile "mysql:mysql-connector-java:${dependencyVersionMySQLConnector}"

    // liquibase
    compile "org.liquibase:liquibase-core:${dependencyVersionLiquibase}"

    // model and dto object mapper
    compile "org.modelmapper:modelmapper:${dependencyVersionModelMapper}"

    // webjars.org client side libraries into JAR files
    compile "org.webjars:react:${dependencyVersionReactJS}"
    compile "org.webjars:jquery:${dependencyVersionJQuery}"

    // test dependencies
    testCompile "org.springframework.boot:spring-boot-starter-test:${dependencyVersionSpringBoot}"
}
